package com.mrbysco.heads.client;

import com.mrbysco.heads.Heads;
import com.mrbysco.heads.client.models.AxolotlSkullModel;
import com.mrbysco.heads.client.models.BatSkullModel;
import com.mrbysco.heads.client.models.BeeSkullModel;
import com.mrbysco.heads.client.models.ChickenSkullModel;
import com.mrbysco.heads.client.models.CodSkullModel;
import com.mrbysco.heads.client.models.CowSkullModel;
import com.mrbysco.heads.client.models.DolphinSkullModel;
import com.mrbysco.heads.client.models.HoglinSkullModel;
import com.mrbysco.heads.client.models.LayeredSkullModel;
import com.mrbysco.heads.client.models.EndermanSkullModel;
import com.mrbysco.heads.client.models.EndermiteSkullModel;
import com.mrbysco.heads.client.models.FoxSkullModel;
import com.mrbysco.heads.client.models.GoatSkullModel;
import com.mrbysco.heads.client.models.HeadModelBase;
import com.mrbysco.heads.client.models.HorseSkullModel;
import com.mrbysco.heads.client.models.IllagerSkullModel;
import com.mrbysco.heads.client.models.IronGolemSkullModel;
import com.mrbysco.heads.client.models.MagmaCubeSkullModel;
import com.mrbysco.heads.client.models.MooshroomSkullModel;
import com.mrbysco.heads.client.models.OcelotSkullModel;
import com.mrbysco.heads.client.models.PigSkullModel;
import com.mrbysco.heads.client.models.PiglinSkullModel;
import com.mrbysco.heads.client.models.SalmonSkullModel;
import com.mrbysco.heads.client.models.SheepSkullFurModel;
import com.mrbysco.heads.client.models.SheepSkullModel;
import com.mrbysco.heads.client.models.SilverfishSkullModel;
import com.mrbysco.heads.client.models.SlimeSkullModel;
import com.mrbysco.heads.client.models.SpiderSkullModel;
import com.mrbysco.heads.client.models.SquidSkullModel;
import com.mrbysco.heads.client.models.TurtleSkullModel;
import com.mrbysco.heads.client.models.VillagerSkullModel;
import com.mrbysco.heads.client.models.WitchSkullModel;
import com.mrbysco.heads.client.models.WolfSkullModel;
import com.mrbysco.heads.registry.HeadTypes;
import com.mrbysco.heads.registry.HeadsRegistry;
import net.minecraft.client.model.SkullModel;
import net.minecraft.client.model.geom.EntityModelSet;
import net.minecraft.client.model.geom.ModelLayerLocation;
import net.minecraft.client.renderer.blockentity.SkullBlockRenderer;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.DyeColor;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.client.event.EntityRenderersEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventBusSubscriber.Bus;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;

@Mod.EventBusSubscriber(value = Dist.CLIENT, bus = Bus.MOD, modid = Heads.MOD_ID)
public class ClientHandler {
	public static final ModelLayerLocation AXOLOTL = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "axolotl"), "head");
	public static final ModelLayerLocation BAT = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "bat"), "head");
	public static final ModelLayerLocation BEE = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "bee"), "head");
	public static final ModelLayerLocation BLAZE = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "blaze"), "head");
	public static final ModelLayerLocation CAT = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "cat"), "head");
	public static final ModelLayerLocation CAVE_SPIDER = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "cave_spider"), "head");
	public static final ModelLayerLocation CHICKEN = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "chicken"), "head");
	public static final ModelLayerLocation COD = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "cod"), "head");
	public static final ModelLayerLocation COW = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "cow"), "head");
	public static final ModelLayerLocation DOLPHIN = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "dolphin"), "head");
	public static final ModelLayerLocation DONKEY = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "donkey"), "head");
	public static final ModelLayerLocation DROWNED = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "drowned"), "head");
	public static final ModelLayerLocation ENDERMAN = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "enderman"), "head");
	public static final ModelLayerLocation ENDERMITE = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "endermite"), "head");
	public static final ModelLayerLocation EVOKER = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "evoker"), "head");
	public static final ModelLayerLocation FOX = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "fox"), "head");
	public static final ModelLayerLocation GHAST = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "ghast"), "head");
	public static final ModelLayerLocation GLOW_SQUID = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "glow_squid"), "head");
	public static final ModelLayerLocation GOAT = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "goat"), "head");
	public static final ModelLayerLocation HOGLIN = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "hoglin"), "head");
	public static final ModelLayerLocation HORSE = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "horse"), "head");
	public static final ModelLayerLocation HUSK = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "husk"), "head");
	public static final ModelLayerLocation ILLUSIONER = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "illusioner"), "head");
	public static final ModelLayerLocation IRON_GOLEM = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "iron_golem"), "head");
	public static final ModelLayerLocation MAGMA_CUBE = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "magma_cube"), "head");
	public static final ModelLayerLocation MULE = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "mule"), "head");
	public static final ModelLayerLocation MOOSHROOM_BROWN = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "brown_mooshroom"), "head");
	public static final ModelLayerLocation MOOSHROOM_RED = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "red_mooshroom"), "head");
	public static final ModelLayerLocation OCELOT = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "ocelot"), "head");
	public static final ModelLayerLocation PIG = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "pig"), "head");
	public static final ModelLayerLocation PIGLIN = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "piglin"), "head");
	public static final ModelLayerLocation PIGLIN_BRUTE = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "piglin_brute"), "head");
	public static final ModelLayerLocation PILLAGER = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "pillager"), "head");
	public static final ModelLayerLocation SALMON = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "salmon"), "head");
	public static final ModelLayerLocation SHEEP = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "sheep"), "head");
	public static final ModelLayerLocation SHEEP_FUR = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "sheep_fur"), "head");
	public static final ModelLayerLocation SILVERFISH = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "silverfish"), "head");
	public static final ModelLayerLocation SLIME = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "slime"), "head");
	public static final ModelLayerLocation SNOW_GOLEM = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "snow_golem"), "head");
	public static final ModelLayerLocation SPIDER = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "spider"), "head");
	public static final ModelLayerLocation SQUID = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "squid"), "head");
	public static final ModelLayerLocation STRAY = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "stray"), "head");
	public static final ModelLayerLocation TURTLE = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "turtle"), "head");
	public static final ModelLayerLocation VILLAGER = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "villager"), "head");
	public static final ModelLayerLocation VINDICATOR = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "vindicator"), "head");
	public static final ModelLayerLocation WANDERING_TRADER = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "wandering_trader"), "head");
	public static final ModelLayerLocation WITCH = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "witch"), "head");
	public static final ModelLayerLocation WOLF = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "wolf"), "head");
	public static final ModelLayerLocation ZOGLIN = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "zoglin"), "head");
	public static final ModelLayerLocation ZOMBIE_VILLAGER = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "zombie_villager"), "head");
	public static final ModelLayerLocation ZOMBIFIED_PIGLIN = new ModelLayerLocation(new ResourceLocation(Heads.MOD_ID, "zombified_piglin"), "skull");

	@SubscribeEvent
	static void clientSetupEvent(FMLClientSetupEvent event) {
		event.enqueueWork(() -> {
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.AXOLOTL_BLUE, new ResourceLocation("textures/entity/axolotl/axolotl_blue.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.AXOLOTL_CYAN, new ResourceLocation("textures/entity/axolotl/axolotl_cyan.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.AXOLOTL_GOLD, new ResourceLocation("textures/entity/axolotl/axolotl_gold.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.AXOLOTL_LUCY, new ResourceLocation("textures/entity/axolotl/axolotl_lucy.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.AXOLOTL_WILD, new ResourceLocation("textures/entity/axolotl/axolotl_wild.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.BAT, new ResourceLocation("textures/entity/bat.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.BEE, new ResourceLocation("textures/entity/bee/bee.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.BLAZE, new ResourceLocation("textures/entity/blaze.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CAT_ALL_BLACK, new ResourceLocation("textures/entity/cat/all_black.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CAT_BLACK, new ResourceLocation("textures/entity/cat/black.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CAT_BRITISH_SHORTHAIR, new ResourceLocation("textures/entity/cat/british_shorthair.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CAT_CALICO, new ResourceLocation("textures/entity/cat/calico.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CAT_JELLIE, new ResourceLocation("textures/entity/cat/jellie.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CAT_PERSIAN, new ResourceLocation("textures/entity/cat/persian.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CAT_RAGDOLL, new ResourceLocation("textures/entity/cat/ragdoll.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CAT_RED, new ResourceLocation("textures/entity/cat/red.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CAT_SIAMESE, new ResourceLocation("textures/entity/cat/siamese.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CAT_TABBY, new ResourceLocation("textures/entity/cat/tabby.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CAT_WHITE, new ResourceLocation("textures/entity/cat/white.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CAVE_SPIDER, new ResourceLocation("textures/entity/spider/cave_spider.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.CHICKEN, new ResourceLocation("textures/entity/chicken.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.COD, new ResourceLocation("textures/entity/fish/cod.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.COW, new ResourceLocation("textures/entity/cow/cow.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.DOLPHIN, new ResourceLocation("textures/entity/dolphin.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.DONKEY, new ResourceLocation("textures/entity/horse/donkey.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.DROWNED, new ResourceLocation("textures/entity/zombie/drowned.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.ENDERMAN, new ResourceLocation("textures/entity/enderman/enderman.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.ENDERMITE, new ResourceLocation("textures/entity/endermite.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.EVOKER, new ResourceLocation("textures/entity/illager/evoker.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.FOX, new ResourceLocation("textures/entity/fox/fox.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.FOX_SNOW, new ResourceLocation("textures/entity/fox/snow_fox.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.GHAST, new ResourceLocation("textures/entity/ghast/ghast.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.GLOW_SQUID, new ResourceLocation("textures/entity/squid/glow_squid.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.GOAT, new ResourceLocation("textures/entity/goat/goat.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.HOGLIN, new ResourceLocation("textures/entity/hoglin/hoglin.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.HORSE_BLACK, new ResourceLocation("textures/entity/horse/horse_black.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.HORSE_BROWN, new ResourceLocation("textures/entity/horse/horse_brown.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.HORSE_CHESTNUT, new ResourceLocation("textures/entity/horse/horse_chestnut.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.HORSE_CREAMY, new ResourceLocation("textures/entity/horse/horse_creamy.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.HORSE_DARKBROWN, new ResourceLocation("textures/entity/horse/horse_darkbrown.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.HORSE_GRAY, new ResourceLocation("textures/entity/horse/horse_gray.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.HORSE_SKELETON, new ResourceLocation("textures/entity/horse/horse_skeleton.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.HORSE_UNDEAD, new ResourceLocation("textures/entity/horse/horse_zombie.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.HORSE_WHITE, new ResourceLocation("textures/entity/horse/horse_white.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.HUSK, new ResourceLocation("textures/entity/zombie/husk.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.ILLUSIONER, new ResourceLocation("textures/entity/illager/illusioner.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.IRON_GOLEM, new ResourceLocation("textures/entity/iron_golem/iron_golem.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.MAGMA_CUBE, new ResourceLocation("textures/entity/slime/magmacube.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.MULE, new ResourceLocation("textures/entity/horse/mule.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.MOOSHROOM_BROWN, new ResourceLocation("textures/entity/cow/brown_mooshroom.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.MOOSHROOM_RED, new ResourceLocation("textures/entity/cow/red_mooshroom.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.OCELOT, new ResourceLocation("textures/entity/cat/ocelot.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.PIG, new ResourceLocation("textures/entity/pig/pig.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.PIGLIN, new ResourceLocation("textures/entity/piglin/piglin.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.PIGLIN_BRUTE, new ResourceLocation("textures/entity/piglin/piglin_brute.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.PILLAGER, new ResourceLocation("textures/entity/illager/pillager.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SALMON, new ResourceLocation("textures/entity/fish/salmon.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_BLACK, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_BLUE, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_BROWN, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_CYAN, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_GRAY, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_GREEN, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_LIGHT_BLUE, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_LIGHT_GRAY, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_LIME, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_MAGENTA, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_ORANGE, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_PINK, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_PURPLE, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_RED, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_SHAVEN, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_WHITE, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SHEEP_YELLOW, new ResourceLocation("textures/entity/sheep/sheep.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SILVERFISH, new ResourceLocation("textures/entity/silverfish.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SLIME, new ResourceLocation("textures/entity/slime/slime.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SNOW_GOLEM, new ResourceLocation("textures/entity/snow_golem.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SPIDER, new ResourceLocation("textures/entity/spider/spider.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.SQUID, new ResourceLocation("textures/entity/squid/squid.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.STRAY, new ResourceLocation("textures/entity/skeleton/stray.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.TURTLE, new ResourceLocation("textures/entity/turtle/big_sea_turtle.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.VILLAGER, new ResourceLocation("textures/entity/villager/villager.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.VINDICATOR, new ResourceLocation("textures/entity/illager/vindicator.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.WANDERING_TRADER, new ResourceLocation("textures/entity/wandering_trader.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.WITCH, new ResourceLocation("textures/entity/witch.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.WOLF, new ResourceLocation("textures/entity/wolf/wolf.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.ZOGLIN, new ResourceLocation("textures/entity/hoglin/zoglin.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.ZOMBIE_VILLAGER, new ResourceLocation("textures/entity/zombie_villager/zombie_villager.png"));
			SkullBlockRenderer.SKIN_BY_TYPE.put(HeadTypes.ZOMBIFIED_PIGLIN, new ResourceLocation("textures/entity/piglin/zombified_piglin.png"));
		});
	}

	@SubscribeEvent
	static void registerLayerDefinitions(EntityRenderersEvent.RegisterRenderers event) {
		event.registerBlockEntityRenderer(HeadsRegistry.HEAD.get(), SkullBlockRenderer::new);
	}

	@SubscribeEvent
	static void registerLayerDefinitions(EntityRenderersEvent.RegisterLayerDefinitions event) {
		event.registerLayerDefinition(AXOLOTL, AxolotlSkullModel::createSkullModel);
		event.registerLayerDefinition(BAT, BatSkullModel::createSkullModel);
		event.registerLayerDefinition(BEE, BeeSkullModel::createSkullModel);
		event.registerLayerDefinition(BLAZE, SkullModel::createMobHeadLayer);
		event.registerLayerDefinition(CAT, OcelotSkullModel::createSkullModel);
		event.registerLayerDefinition(CAVE_SPIDER, SpiderSkullModel::createSkullModel);
		event.registerLayerDefinition(CHICKEN, ChickenSkullModel::createSkullModel);
		event.registerLayerDefinition(COD, CodSkullModel::createSkullModel);
		event.registerLayerDefinition(COW, CowSkullModel::createSkullModel);
		event.registerLayerDefinition(DOLPHIN, DolphinSkullModel::createSkullModel);
		event.registerLayerDefinition(DONKEY, HorseSkullModel::createDonkeySkull);
		event.registerLayerDefinition(DROWNED, LayeredSkullModel::createSkullModel);
		event.registerLayerDefinition(ENDERMAN, EndermanSkullModel::createSkullModel);
		event.registerLayerDefinition(ENDERMITE, EndermiteSkullModel::createSkullModel);
		event.registerLayerDefinition(EVOKER, IllagerSkullModel::createIllagerSkullModel);
		event.registerLayerDefinition(FOX, FoxSkullModel::createSkullModel);
		event.registerLayerDefinition(GHAST, () -> HeadModelBase.createMobHead(32, 16));
		event.registerLayerDefinition(GLOW_SQUID, SquidSkullModel::createSkullModel);
		event.registerLayerDefinition(GOAT, GoatSkullModel::createSkullModel);
		event.registerLayerDefinition(HOGLIN, HoglinSkullModel::createSkullModel);
		event.registerLayerDefinition(HORSE, HorseSkullModel::createHorseSkull);
		event.registerLayerDefinition(HUSK, SkullModel::createHumanoidHeadLayer);
		event.registerLayerDefinition(ILLUSIONER, IllagerSkullModel::createIllagerSkullModel);
		event.registerLayerDefinition(IRON_GOLEM, IronGolemSkullModel::createSkullModel);
		event.registerLayerDefinition(MAGMA_CUBE, MagmaCubeSkullModel::createSkullModel);
		event.registerLayerDefinition(MULE, HorseSkullModel::createMuleSkull);
		event.registerLayerDefinition(MOOSHROOM_BROWN, MooshroomSkullModel::createSkullModel);
		event.registerLayerDefinition(MOOSHROOM_RED, MooshroomSkullModel::createSkullModel);
		event.registerLayerDefinition(OCELOT, OcelotSkullModel::createSkullModel);
		event.registerLayerDefinition(PIG, PigSkullModel::createSkullModel);
		event.registerLayerDefinition(PIGLIN, PiglinSkullModel::createSkullModel);
		event.registerLayerDefinition(PIGLIN_BRUTE, PiglinSkullModel::createSkullModel);
		event.registerLayerDefinition(PILLAGER, IllagerSkullModel::createIllagerSkullModel);
		event.registerLayerDefinition(SALMON, SalmonSkullModel::createSkullModel);
		event.registerLayerDefinition(SHEEP, SheepSkullModel::createSkullModel);
		event.registerLayerDefinition(SHEEP_FUR, SheepSkullFurModel::createSkullModel);
		event.registerLayerDefinition(SILVERFISH, SilverfishSkullModel::createSkullModel);
		event.registerLayerDefinition(SLIME, SlimeSkullModel::createSkullModel);
		event.registerLayerDefinition(SNOW_GOLEM, () -> HeadModelBase.createMobHead(64, 64));
		event.registerLayerDefinition(SPIDER, SpiderSkullModel::createSkullModel);
		event.registerLayerDefinition(SQUID, SquidSkullModel::createSkullModel);
		event.registerLayerDefinition(STRAY, () -> LayeredSkullModel.createSkullModel(64, 32));
		event.registerLayerDefinition(TURTLE, TurtleSkullModel::createSkullModel);
		event.registerLayerDefinition(VILLAGER, VillagerSkullModel::createVillagerSkullModel);
		event.registerLayerDefinition(VINDICATOR, IllagerSkullModel::createIllagerSkullModel);
		event.registerLayerDefinition(WANDERING_TRADER, VillagerSkullModel::createVillagerSkullModel);
		event.registerLayerDefinition(WITCH, WitchSkullModel::createSkullModel);
		event.registerLayerDefinition(WOLF, WolfSkullModel::createSkullModel);
		event.registerLayerDefinition(ZOGLIN, HoglinSkullModel::createSkullModel);
		event.registerLayerDefinition(ZOMBIE_VILLAGER, VillagerSkullModel::createVillagerSkullModel);
		event.registerLayerDefinition(ZOMBIFIED_PIGLIN, PiglinSkullModel::createSkullModel);
	}

	@SubscribeEvent
	static void registerSkullModel(EntityRenderersEvent.CreateSkullModels event) {
		EntityModelSet entityModelSet = event.getEntityModelSet();
		event.registerSkullModel(HeadTypes.AXOLOTL_BLUE, new BatSkullModel(entityModelSet.bakeLayer(ClientHandler.AXOLOTL)));
		event.registerSkullModel(HeadTypes.AXOLOTL_CYAN, new BatSkullModel(entityModelSet.bakeLayer(ClientHandler.AXOLOTL)));
		event.registerSkullModel(HeadTypes.AXOLOTL_GOLD, new BatSkullModel(entityModelSet.bakeLayer(ClientHandler.AXOLOTL)));
		event.registerSkullModel(HeadTypes.AXOLOTL_LUCY, new BatSkullModel(entityModelSet.bakeLayer(ClientHandler.AXOLOTL)));
		event.registerSkullModel(HeadTypes.AXOLOTL_WILD, new BatSkullModel(entityModelSet.bakeLayer(ClientHandler.AXOLOTL)));
		event.registerSkullModel(HeadTypes.BAT, new BatSkullModel(entityModelSet.bakeLayer(ClientHandler.BAT)));
		event.registerSkullModel(HeadTypes.BEE, new BeeSkullModel(entityModelSet.bakeLayer(ClientHandler.BEE)));
		event.registerSkullModel(HeadTypes.BLAZE, new SkullModel(entityModelSet.bakeLayer(ClientHandler.BLAZE)));
		event.registerSkullModel(HeadTypes.CAT_ALL_BLACK, new OcelotSkullModel(entityModelSet.bakeLayer(ClientHandler.CAT)));
		event.registerSkullModel(HeadTypes.CAT_BLACK, new OcelotSkullModel(entityModelSet.bakeLayer(ClientHandler.CAT)));
		event.registerSkullModel(HeadTypes.CAT_BRITISH_SHORTHAIR, new OcelotSkullModel(entityModelSet.bakeLayer(ClientHandler.CAT)));
		event.registerSkullModel(HeadTypes.CAT_CALICO, new OcelotSkullModel(entityModelSet.bakeLayer(ClientHandler.CAT)));
		event.registerSkullModel(HeadTypes.CAT_JELLIE, new OcelotSkullModel(entityModelSet.bakeLayer(ClientHandler.CAT)));
		event.registerSkullModel(HeadTypes.CAT_PERSIAN, new OcelotSkullModel(entityModelSet.bakeLayer(ClientHandler.CAT)));
		event.registerSkullModel(HeadTypes.CAT_RAGDOLL, new OcelotSkullModel(entityModelSet.bakeLayer(ClientHandler.CAT)));
		event.registerSkullModel(HeadTypes.CAT_RED, new OcelotSkullModel(entityModelSet.bakeLayer(ClientHandler.CAT)));
		event.registerSkullModel(HeadTypes.CAT_SIAMESE, new OcelotSkullModel(entityModelSet.bakeLayer(ClientHandler.CAT)));
		event.registerSkullModel(HeadTypes.CAT_TABBY, new OcelotSkullModel(entityModelSet.bakeLayer(ClientHandler.CAT)));
		event.registerSkullModel(HeadTypes.CAT_WHITE, new OcelotSkullModel(entityModelSet.bakeLayer(ClientHandler.CAT)));
		event.registerSkullModel(HeadTypes.CAVE_SPIDER, new SpiderSkullModel(entityModelSet.bakeLayer(ClientHandler.CAVE_SPIDER)));
		event.registerSkullModel(HeadTypes.CHICKEN, new ChickenSkullModel(entityModelSet.bakeLayer(ClientHandler.CHICKEN)));
		event.registerSkullModel(HeadTypes.COD, new CodSkullModel(entityModelSet.bakeLayer(ClientHandler.COD)));
		event.registerSkullModel(HeadTypes.COW, new CowSkullModel(entityModelSet.bakeLayer(ClientHandler.COW)));
		event.registerSkullModel(HeadTypes.DOLPHIN, new DolphinSkullModel(entityModelSet.bakeLayer(ClientHandler.DOLPHIN)));
		event.registerSkullModel(HeadTypes.DONKEY, new HorseSkullModel(entityModelSet.bakeLayer(ClientHandler.DONKEY)));
		event.registerSkullModel(HeadTypes.DROWNED, new LayeredSkullModel(entityModelSet.bakeLayer(ClientHandler.DROWNED), new ResourceLocation("textures/entity/zombie/drowned_outer_layer.png")));
		event.registerSkullModel(HeadTypes.ENDERMAN, new EndermanSkullModel(entityModelSet.bakeLayer(ClientHandler.ENDERMAN)));
		event.registerSkullModel(HeadTypes.ENDERMITE, new EndermiteSkullModel(entityModelSet.bakeLayer(ClientHandler.ENDERMITE)));
		event.registerSkullModel(HeadTypes.EVOKER, new IllagerSkullModel(entityModelSet.bakeLayer(ClientHandler.EVOKER)));
		event.registerSkullModel(HeadTypes.FOX, new FoxSkullModel(entityModelSet.bakeLayer(ClientHandler.FOX)));
		event.registerSkullModel(HeadTypes.FOX_SNOW, new FoxSkullModel(entityModelSet.bakeLayer(ClientHandler.FOX)));
		event.registerSkullModel(HeadTypes.GHAST, new HeadModelBase(entityModelSet.bakeLayer(ClientHandler.GHAST)));
		event.registerSkullModel(HeadTypes.GLOW_SQUID, new SquidSkullModel(entityModelSet.bakeLayer(ClientHandler.GLOW_SQUID), true));
		event.registerSkullModel(HeadTypes.GOAT, new GoatSkullModel(entityModelSet.bakeLayer(ClientHandler.GOAT)));
		event.registerSkullModel(HeadTypes.HOGLIN, new HoglinSkullModel(entityModelSet.bakeLayer(ClientHandler.HOGLIN)));
		event.registerSkullModel(HeadTypes.HORSE_BLACK, new HorseSkullModel(entityModelSet.bakeLayer(ClientHandler.HORSE)));
		event.registerSkullModel(HeadTypes.HORSE_BROWN, new HorseSkullModel(entityModelSet.bakeLayer(ClientHandler.HORSE)));
		event.registerSkullModel(HeadTypes.HORSE_CHESTNUT, new HorseSkullModel(entityModelSet.bakeLayer(ClientHandler.HORSE)));
		event.registerSkullModel(HeadTypes.HORSE_CREAMY, new HorseSkullModel(entityModelSet.bakeLayer(ClientHandler.HORSE)));
		event.registerSkullModel(HeadTypes.HORSE_DARKBROWN, new HorseSkullModel(entityModelSet.bakeLayer(ClientHandler.HORSE)));
		event.registerSkullModel(HeadTypes.HORSE_GRAY, new HorseSkullModel(entityModelSet.bakeLayer(ClientHandler.HORSE)));
		event.registerSkullModel(HeadTypes.HORSE_SKELETON, new HorseSkullModel(entityModelSet.bakeLayer(ClientHandler.HORSE)));
		event.registerSkullModel(HeadTypes.HORSE_UNDEAD, new HorseSkullModel(entityModelSet.bakeLayer(ClientHandler.HORSE)));
		event.registerSkullModel(HeadTypes.HORSE_WHITE, new HorseSkullModel(entityModelSet.bakeLayer(ClientHandler.HORSE)));
		event.registerSkullModel(HeadTypes.HUSK, new SkullModel(entityModelSet.bakeLayer(ClientHandler.HUSK)));
		event.registerSkullModel(HeadTypes.ILLUSIONER, new IllagerSkullModel(entityModelSet.bakeLayer(ClientHandler.ILLUSIONER)));
		event.registerSkullModel(HeadTypes.IRON_GOLEM, new IronGolemSkullModel(entityModelSet.bakeLayer(ClientHandler.IRON_GOLEM)));
		event.registerSkullModel(HeadTypes.MAGMA_CUBE, new MagmaCubeSkullModel(entityModelSet.bakeLayer(ClientHandler.MAGMA_CUBE)));
		event.registerSkullModel(HeadTypes.MULE, new HorseSkullModel(entityModelSet.bakeLayer(ClientHandler.MULE)));
		event.registerSkullModel(HeadTypes.MOOSHROOM_BROWN, new MooshroomSkullModel(entityModelSet.bakeLayer(ClientHandler.MOOSHROOM_BROWN), false));
		event.registerSkullModel(HeadTypes.MOOSHROOM_RED, new MooshroomSkullModel(entityModelSet.bakeLayer(ClientHandler.MOOSHROOM_RED), true));
		event.registerSkullModel(HeadTypes.OCELOT, new OcelotSkullModel(entityModelSet.bakeLayer(ClientHandler.OCELOT)));
		event.registerSkullModel(HeadTypes.PIG, new PigSkullModel(entityModelSet.bakeLayer(ClientHandler.PIG)));
		event.registerSkullModel(HeadTypes.PIGLIN, new PiglinSkullModel(entityModelSet.bakeLayer(ClientHandler.PIGLIN)));
		event.registerSkullModel(HeadTypes.PIGLIN_BRUTE, new PiglinSkullModel(entityModelSet.bakeLayer(ClientHandler.PIGLIN_BRUTE)));
		event.registerSkullModel(HeadTypes.PILLAGER, new IllagerSkullModel(entityModelSet.bakeLayer(ClientHandler.PILLAGER)));
		event.registerSkullModel(HeadTypes.SALMON, new SalmonSkullModel(entityModelSet.bakeLayer(ClientHandler.SALMON)));
		event.registerSkullModel(HeadTypes.SHEEP_BLACK, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.BLACK)));
		event.registerSkullModel(HeadTypes.SHEEP_BLUE, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.BLUE)));
		event.registerSkullModel(HeadTypes.SHEEP_BROWN, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.BROWN)));
		event.registerSkullModel(HeadTypes.SHEEP_CYAN, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.CYAN)));
		event.registerSkullModel(HeadTypes.SHEEP_GRAY, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.GRAY)));
		event.registerSkullModel(HeadTypes.SHEEP_GREEN, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.GREEN)));
		event.registerSkullModel(HeadTypes.SHEEP_LIGHT_BLUE, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.LIGHT_BLUE)));
		event.registerSkullModel(HeadTypes.SHEEP_LIGHT_GRAY, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.LIGHT_GRAY)));
		event.registerSkullModel(HeadTypes.SHEEP_LIME, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.LIME)));
		event.registerSkullModel(HeadTypes.SHEEP_MAGENTA, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.MAGENTA)));
		event.registerSkullModel(HeadTypes.SHEEP_ORANGE, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.ORANGE)));
		event.registerSkullModel(HeadTypes.SHEEP_PINK, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.PINK)));
		event.registerSkullModel(HeadTypes.SHEEP_PURPLE, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.PURPLE)));
		event.registerSkullModel(HeadTypes.SHEEP_RED, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.RED)));
		event.registerSkullModel(HeadTypes.SHEEP_SHAVEN, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP)));
		event.registerSkullModel(HeadTypes.SHEEP_WHITE, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.WHITE)));
		event.registerSkullModel(HeadTypes.SHEEP_YELLOW, new SheepSkullModel(entityModelSet.bakeLayer(ClientHandler.SHEEP), new SheepSkullFurModel(entityModelSet.bakeLayer(ClientHandler.SHEEP_FUR), DyeColor.YELLOW)));
		event.registerSkullModel(HeadTypes.SILVERFISH, new SilverfishSkullModel(entityModelSet.bakeLayer(ClientHandler.SILVERFISH)));
		event.registerSkullModel(HeadTypes.SLIME, new SlimeSkullModel(entityModelSet.bakeLayer(ClientHandler.SLIME)));
		event.registerSkullModel(HeadTypes.SNOW_GOLEM, new HeadModelBase(entityModelSet.bakeLayer(ClientHandler.SNOW_GOLEM)));
		event.registerSkullModel(HeadTypes.SPIDER, new SpiderSkullModel(entityModelSet.bakeLayer(ClientHandler.SPIDER)));
		event.registerSkullModel(HeadTypes.SQUID, new SquidSkullModel(entityModelSet.bakeLayer(ClientHandler.SQUID), false));
		event.registerSkullModel(HeadTypes.STRAY, new LayeredSkullModel(entityModelSet.bakeLayer(ClientHandler.STRAY), new ResourceLocation("textures/entity/skeleton/stray_overlay.png")));
		event.registerSkullModel(HeadTypes.TURTLE, new TurtleSkullModel(entityModelSet.bakeLayer(ClientHandler.TURTLE)));
		event.registerSkullModel(HeadTypes.VILLAGER, new VillagerSkullModel(entityModelSet.bakeLayer(ClientHandler.VILLAGER)));
		event.registerSkullModel(HeadTypes.VINDICATOR, new IllagerSkullModel(entityModelSet.bakeLayer(ClientHandler.VINDICATOR)));
		event.registerSkullModel(HeadTypes.WANDERING_TRADER, new VillagerSkullModel(entityModelSet.bakeLayer(ClientHandler.WANDERING_TRADER)));
		event.registerSkullModel(HeadTypes.WITCH, new WitchSkullModel(entityModelSet.bakeLayer(ClientHandler.WITCH)));
		event.registerSkullModel(HeadTypes.WOLF, new WolfSkullModel(entityModelSet.bakeLayer(ClientHandler.WOLF)));
		event.registerSkullModel(HeadTypes.ZOGLIN, new HoglinSkullModel(entityModelSet.bakeLayer(ClientHandler.ZOGLIN)));
		event.registerSkullModel(HeadTypes.ZOMBIE_VILLAGER, new VillagerSkullModel(entityModelSet.bakeLayer(ClientHandler.ZOMBIE_VILLAGER)));
		event.registerSkullModel(HeadTypes.ZOMBIFIED_PIGLIN, new PiglinSkullModel(entityModelSet.bakeLayer(ClientHandler.ZOMBIFIED_PIGLIN)));
	}
}
